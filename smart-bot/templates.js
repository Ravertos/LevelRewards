

const templates = {
  levelUp: [
    "üéâ Gro√üartig gemacht, {player}! Du bist jetzt Level {level}!",
    "ü¶ñ {player} hat soeben Level {level} erreicht ‚Äì Respekt!",
    "üèÜ {player}, du wirst immer st√§rker. Willkommen auf Level {level}!",
    "‚ö° {player} levelt wie ein Profi! Level {level} ist geschafft!",
    "üî• {player} brennt heute richtig! Level {level} erreicht!",
    "üåü Ein neuer Stern am ARK-Himmel: {player} Level {level}!"
  ],
  death: [
    "üíÄ Oof! {player} hat es erwischt‚Ä¶ bleib stark!",
    "‚ö∞Ô∏è RIP {player}. Die Dinos waren st√§rker‚Ä¶ diesmal.",
    "‚ò†Ô∏è {player} ist gefallen‚Ä¶ aber wird zur√ºckkommen!",
    "ü™¶ {player} hat den Kampf verloren, aber nie den Mut!",
    "üí• {player} wurde von der ARK-Realit√§t eingeholt‚Ä¶",
    "ü¶ï Die Dinos feiern, {player} respawnt gleich wieder!"
  ],
  achievement: [
    "üèÜ {player} hat {achievement} freigeschaltet! Legend√§r!",
    "üéñÔ∏è Achievement unlocked: {player} ‚Üí {achievement}!",
    "‚≠ê {player} sammelt Erfolge wie ein Profi: {achievement}!",
    "ü•á {player} hat {achievement} gemeistert! Respekt!",
    "üéØ Volltreffer! {player} erreicht {achievement}!"
  ],
  tame: [
    "ü¶ñ {player} hat {dino} gez√§hmt! Ein neuer Begleiter!",
    "üéØ Perfekt! {player} und {dino} sind jetzt ein Team!",
    "ü§ù {player} hat {dino} √ºberzeugt ‚Äì Freundschaft f√ºrs Leben!",
    "‚ú® {player} hat {dino} erfolgreich gez√§hmt! Gl√ºckwunsch!",
    "ü¶ï {dino} folgt jetzt {player} √ºberall hin!"
  ],
  talk: [
    "üó®Ô∏è {player} sagt: {message}",
    "üí¨ {player} meint: {message}",
    "üéôÔ∏è {player} spricht: {message}",
    "üì¢ {player} verk√ºndet: {message}",
    "üó£Ô∏è {player} teilt mit: {message}"
  ],
  join: [
    "üéÆ {player} betritt die ARK! Willkommen im √úberlebenskampf!",
    "üëã Hallo {player}! Bereit f√ºr das Abenteuer?",
    "üåç {player} ist der ARK beigetreten. Viel Erfolg beim √úberleben!",
    "üöÄ {player} startet das gro√üe Abenteuer!",
    "üéä {player} ist da! Die ARK wird lebendiger!"
  ],
  leave: [
    "üëã {player} verl√§sst die ARK. Bis zum n√§chsten Mal!",
    "üö™ {player} ist offline gegangen. Wir sehen uns wieder!",
    "üò¢ {player} hat uns verlassen‚Ä¶ komm gut nach Hause!",
    "üåÖ {player} beendet das Abenteuer f√ºr heute.",
    "üí§ {player} geht schlafen. Tr√§um von Dinos!"
  ],
  build: [
    "üèóÔ∏è {player} baut wie ein Architekt! {structure} errichtet!",
    "üî® {player} hat {structure} gebaut. Impressive!",
    "üè† {player} erweitert die Basis: {structure} fertiggestellt!",
    "‚öíÔ∏è Baumeister {player} hat {structure} erschaffen!"
  ],
  craft: [
    "üîß {player} hat {item} gecraftet! Handwerkskunst!",
    "‚öôÔ∏è {player} ist flei√üig: {item} hergestellt!",
    "üõ†Ô∏è {player} craftet wie ein Profi: {item} ready!",
    "‚ú® {player} hat {item} erfolgreich hergestellt!"
  ],
  pvp: [
    "‚öîÔ∏è {player} dominiert im PvP! {enemy} wurde besiegt!",
    "ü•ä {player} vs {enemy} ‚Äì {player} gewinnt!",
    "üèÜ {player} hat {enemy} im Kampf √ºberw√§ltigt!",
    "üí™ {player} zeigt {enemy} wer der Boss ist!"
  ],
  tribe: [
    "ü§ù {player} ist {tribe} beigetreten! Welcome to the family!",
    "üë• {tribe} hat ein neues Mitglied: {player}!",
    "üèòÔ∏è {player} verst√§rkt jetzt {tribe}!",
    "üéâ {tribe} w√§chst: {player} ist dabei!"
  ],
  discover: [
    "üó∫Ô∏è {player} hat {location} entdeckt! Entdecker-Spirit!",
    "üîç {player} erkundet {location} ‚Äì mutig!",
    "üåü {player} hat {location} gefunden! Abenteurer!",
    "üèûÔ∏è {player} entdeckt die Geheimnisse von {location}!"
  ],
  boss: [
    "üî• {player} hat {boss} besiegt! LEGENDARY!",
    "üëë {player} ist der neue Boss-Killer: {boss} defeated!",
    "‚ö° {player} vs {boss} ‚Äì EPISCHER SIEG!",
    "üèÜ {player} hat {boss} zur Strecke gebracht!"
  ],
  resource: [
    "‚õèÔ∏è {player} sammelt flei√üig {resource}! Grinder-Mode!",
    "üíé {player} hat {resource} abgebaut. Produktiv!",
    "ü™® {player} farmt {resource} wie ein Profi!",
    "‚öíÔ∏è {player} sammelt {resource} f√ºr gro√üe Projekte!"
  ],
  weather: [
    "üå©Ô∏è Sturm im Anmarsch! {player}, such dir Schutz!",
    "üå°Ô∏è Hitzewelle! {player} braucht K√ºhlung!",
    "üå®Ô∏è K√§lteschock! {player}, w√§rm dich auf!",
    "‚õàÔ∏è Gewitter! {player}, pass auf die Elektronik auf!"
  ],
  event: [
    "üéÉ Halloween Event! {player} sammelt spooky Rewards!",
    "üéÑ Weihnachts-Event! {player} findet festliche Geschenke!",
    "üíù Valentinstag! {player} und die Dinos feiern Liebe!",
    "ü•ö Oster-Event! {player} sucht bunte Eier!"
  ],
  funny: [
    "üòÇ {player} macht Quatsch und alle lachen!",
    "ü§™ {player} ist heute besonders verr√ºckt!",
    "üé≠ {player} entertaint die ganze Server-Community!",
    "üòÅ {player} sorgt f√ºr gute Stimmung auf dem Server!"
  ],
  motivational: [
    "üí™ {player}, du schaffst das! Weitermachen!",
    "üåü {player} ist auf dem richtigen Weg zum Erfolg!",
    "üî• {player} brennt f√ºr ARK ‚Äì diese Leidenschaft!",
    "‚ö° {player} hat Power ohne Ende! Unstoppable!"
  ],
  night: [
    "üåô {player} √ºberlebt die Nacht. Respekt!",
    "üî¶ {player} k√§mpft sich durch die Dunkelheit!",
    "üåÉ {player} baut nachts weiter ‚Äì Workaholic!",
    "ü¶á {player} und die Nacht-Dinos verstehen sich!"
  ],
  morning: [
    "üåÖ {player} begr√º√üt den neuen Tag auf ARK!",
    "‚òÄÔ∏è {player} startet energisch in den Morgen!",
    "üêì {player} ist fr√ºh dran ‚Äì Fr√ºhaufsteher!",
    "üåÑ {player} genie√üt den Sonnenaufgang √ºber der ARK!"
  ]
};

function getRandomResponse(type, context = {}) {
  const options = templates[type];
  if (!options) return null;

  // Spezielle Logik f√ºr verschiedene Event-Typen
  let selectedTemplate;

  switch(type) {
    case 'levelUp':
      // Besondere Nachrichten f√ºr Milestone-Level
      if (context.level && [10, 20, 25, 50, 75, 100].includes(parseInt(context.level))) {
        const milestoneTemplates = [
          "üéä MILESTONE! {player} hat Level {level} erreicht! Das verdient eine Belohnung!",
          "üèÜ LEGENDARY! {player} Level {level} ‚Äì ein wahrer ARK-Meister!",
          "‚≠ê SPECIAL LEVEL! {player} ist jetzt Level {level} ‚Äì incredible!"
        ];
        selectedTemplate = milestoneTemplates[Math.floor(Math.random() * milestoneTemplates.length)];
      } else {
        selectedTemplate = options[Math.floor(Math.random() * options.length)];
      }
      break;

    case 'death':
      // Verschiedene Nachrichten je nach Todesursache
      if (context.killer && context.killer.includes('Dragon')) {
        selectedTemplate = "üêâ {player} wurde von einem Dragon besiegt! Das ist keine Schande!";
      } else if (context.killer && context.killer.includes('Rex')) {
        selectedTemplate = "ü¶ñ {player} vs T-Rex ‚Äì manchmal gewinnt halt der Rex!";
      } else {
        selectedTemplate = options[Math.floor(Math.random() * options.length)];
      }
      break;

    case 'tame':
      // Spezielle Nachrichten f√ºr seltene Dinos
      if (context.dino && (context.dino.includes('Rex') || context.dino.includes('Dragon'))) {
        selectedTemplate = "üî• EPIC TAME! {player} hat {dino} gez√§hmt! Das ist LEGENDARY!";
      } else {
        selectedTemplate = options[Math.floor(Math.random() * options.length)];
      }
      break;

    default:
      selectedTemplate = options[Math.floor(Math.random() * options.length)];
  }

  // Ersetze alle Platzhalter
  return selectedTemplate.replace(/{(\w+)}/g, (_, key) => {
    if (context[key]) return context[key];
    
    // Fallback-Werte f√ºr fehlende Kontexte
    const fallbacks = {
      player: 'Survivor',
      level: 'X',
      dino: 'unknown creature',
      achievement: 'something amazing',
      structure: 'something epic',
      item: 'something useful',
      enemy: 'opponent',
      tribe: 'a tribe',
      location: 'somewhere new',
      boss: 'a mighty boss',
      resource: 'resources',
      message: 'something important'
    };

    return fallbacks[key] || `{${key}}`;
  });
}

module.exports = { getRandomResponse, templates };
